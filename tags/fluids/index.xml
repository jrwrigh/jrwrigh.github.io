<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fluids | James Wright</title>
    <link>https://www.jameswright.xyz/tags/fluids/</link>
      <atom:link href="https://www.jameswright.xyz/tags/fluids/index.xml" rel="self" type="application/rss+xml" />
    <description>Fluids</description>
    <generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>en-us</language><lastBuildDate>Thu, 13 Aug 2020 09:49:47 -0600</lastBuildDate>
    <image>
      <url>https://www.jameswright.xyz/media/icon_hu5565312668262403012.png</url>
      <title>Fluids</title>
      <link>https://www.jameswright.xyz/tags/fluids/</link>
    </image>
    
    <item>
      <title>Calculate Wall Shear Gradient from Velocity Gradient</title>
      <link>https://www.jameswright.xyz/post/20200813/calculate_wall_shear_from_velocity_gradient/</link>
      <pubDate>Thu, 13 Aug 2020 09:49:47 -0600</pubDate>
      <guid>https://www.jameswright.xyz/post/20200813/calculate_wall_shear_from_velocity_gradient/</guid>
      <description>&lt;p&gt;The gradient of velocity is generally easy to compute in most CFD
post-processing routines. But let&amp;rsquo;s say you want to find the wall shear stress
from this quantity, how would you do that? I&amp;rsquo;d been searching for an answer to
this question and could never really find one (or at least one that was
satisfying). Eventually I derived out the following solution and figured I&amp;rsquo;d
post it so that the information was more widely available.&lt;/p&gt;
&lt;h2 id=&#34;initial-definitions&#34;&gt;Initial Definitions&lt;/h2&gt;
&lt;p&gt;First, let&amp;rsquo;s define more explicitly what we&amp;rsquo;re trying to find. The wall shear
stress is often given as:&lt;/p&gt;
&lt;p&gt;$$ \tau_w = \mu \left (\frac{\partial u}{\partial y}\right )
\Bigg\rvert_{y=\text{wall}} $$&lt;/p&gt;
&lt;p&gt;However, this isn&amp;rsquo;t very explicit and really only applies to flat plate
boundary layer flows. I&amp;rsquo;d submit that the &amp;ldquo;real&amp;rdquo; definition is dynamic
viscosity ($\mu$) times the wall-normal gradient of velocity tangential to the
wall taken at the wall, or:&lt;/p&gt;
&lt;p&gt;$$ \tau_w = \mu \left (\frac{\partial u_\parallel}{\partial n}\right )
\Bigg\rvert_{n=0} $$&lt;/p&gt;
&lt;p&gt;This will result in a vector parallel to the wall in the direction of the wall
shear stress.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ll define the velocity gradient as a tensor $E_{ij}\ $:&lt;/p&gt;
&lt;p&gt;$$ E_{ij} = \frac{\partial u_i}{\partial x_j} = \partial_j u_i$$&lt;/p&gt;
&lt;p&gt;Note that $E_{ij}$ is &lt;em&gt;not&lt;/em&gt; symmetric and that $\partial_j$ is still an
operator with $u_i$ as it&amp;rsquo;s input, not multiplication.&lt;/p&gt;
&lt;p&gt;Lastly, we have the common form of projecting a vector onto a plane given its
normal vector:&lt;/p&gt;
&lt;p&gt;$$ \text{proj}_{\hat n}(\overrightarrow{u}) = \overrightarrow{u} -
(\overrightarrow{u} \cdot \hat n) \hat n
= u_i - (u_j \hat n_j) \hat n_i$$&lt;/p&gt;
&lt;p&gt;where $\hat n$ is the wall-normal unit vector. The right most term is in index
summation notation.&lt;/p&gt;
&lt;h2 id=&#34;preamble&#34;&gt;Preamble&lt;/h2&gt;
&lt;h3 id=&#34;assumptions&#34;&gt;Assumptions&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;We have a wall-normal unit vector $\hat n_i$&lt;/li&gt;
&lt;li&gt;We have the velocity gradient tensor $E_{ij} = \partial_j u_i$&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;goal&#34;&gt;Goal&lt;/h3&gt;
&lt;p&gt;Obtain:&lt;/p&gt;
&lt;p&gt;$$ \left (\frac{\partial u_\parallel}{\partial n}\right ) \Bigg\rvert_{n=0} =
\left (\partial_{\hat n} u_\parallel\right ) \big\rvert_{n=0} =
f(E_{ij}, \hat n) = f(\partial_j u_i, \hat n)$$&lt;/p&gt;
&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;
&lt;p&gt;For the impatient, the solution is:&lt;/p&gt;
&lt;p&gt;$$ \left (\frac{\partial u_\parallel}{\partial n}\right )
\Bigg\rvert_{n=0} = \bigg( \big[(\delta_{ik} - \hat n_k \hat n_i) \hat n_j
\big] E_{kj} \bigg) \Bigg\rvert_{n=0} = f(\hat n, E_{ij})$$&lt;/p&gt;
&lt;p&gt;The derivation of the above equation is given below.&lt;/p&gt;
&lt;h2 id=&#34;derivation&#34;&gt;Derivation&lt;/h2&gt;
&lt;p&gt;Notice that the wall shear gradient can be broken into two &amp;ldquo;terms&amp;rdquo;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gradient in the wall-normal direction&lt;/li&gt;
&lt;li&gt;velocity tangent to the wall&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;First we&amp;rsquo;ll define these two &amp;ldquo;terms&amp;rdquo; individually&lt;/p&gt;
&lt;h3 id=&#34;gradient-in-the-wall-normal-direction&#34;&gt;Gradient in the Wall-Normal Direction&lt;/h3&gt;
&lt;p&gt;This is simply:&lt;/p&gt;
&lt;p&gt;$$\hat n_j \partial_j$$&lt;/p&gt;
&lt;p&gt;Gradient in a specific direction should result in a tensor whose rank is the
same as it&amp;rsquo;s input. In other words, the gradient of a scalar in a single
direction should result in a scalar (which is a rank 0 tensor). The summation
over the $j$ index shows that this is true.&lt;/p&gt;
&lt;h3 id=&#34;velocity-tangent-to-the-wall&#34;&gt;Velocity Tangent to the Wall&lt;/h3&gt;
&lt;p&gt;Taking the vector projection formula from &lt;a href=&#34;#initial-definitions&#34;&gt;Initial
Definitions&lt;/a&gt;, this is fairly straight forward:&lt;/p&gt;
&lt;p&gt;$$ u_{i,\parallel} = u_i - (u_k \hat n_k) \hat n_i$$&lt;/p&gt;
&lt;h3 id=&#34;combining-terms&#34;&gt;Combining Terms&lt;/h3&gt;
&lt;p&gt;Putting these together, we get:&lt;/p&gt;
&lt;p&gt;$$\underbrace{\hat n_j \partial_j}_{\partial_{\hat n}}
[\underbrace{u_i - (u_k \hat n_k) \hat n_i }_{u_{\parallel}}]$$&lt;/p&gt;
&lt;p&gt;$$\Rightarrow \hat n_j \partial_j \left [u_k (\delta_{ik} - \hat n_k \hat n_i)
\right]$$&lt;/p&gt;
&lt;p&gt;Using product rule:&lt;/p&gt;
&lt;p&gt;$$ \Rightarrow (\delta_{ik} - \hat n_k \hat n_i)
\hat n_j \partial_j (u_k) +
u_k \hat n_j \partial_j (\delta_{ik} - \hat n_k \hat n_i)$$&lt;/p&gt;
&lt;p&gt;First, let&amp;rsquo;s work with the right hand term (RHT):&lt;/p&gt;
&lt;p&gt;$$ \text{RHT} = u_k \hat n_j \partial_j (\delta_{ik} - \hat n_k \hat n_i) $$&lt;/p&gt;
&lt;p&gt;$$\Rightarrow u_k \left [\hat n_j \partial_j (\delta_{ik}) - \hat n_j
\partial_j (\hat n_k \hat n_i) \right ]$$&lt;/p&gt;
&lt;p&gt;The Kronecker delta is invariant of spacial dimensions, so the left term goes to
zero. Then we can do product rule again on the right term.&lt;/p&gt;
&lt;p&gt;$$\Rightarrow u_k \left [\hat n_j \cancel{\partial_j (\delta_{ik})} - \hat n_j
\partial_j (\hat n_k \hat n_i)) \right ]$$&lt;/p&gt;
&lt;p&gt;$$\Rightarrow -u_k  \left [\hat n_i \hat n_j \partial_j (\hat n_k) + \hat n_k
\hat n_j \partial_j (\hat n_i) \right ]$$&lt;/p&gt;
&lt;p&gt;Here, $\hat n$ is &lt;em&gt;not&lt;/em&gt; invariant of spacial location; if you have a non-flat
surface, it will change as you move along the wall. However, note that $\hat
n_j \partial_j$ is the gradient in the wall-normal direction. The $\hat n$
does not change in the wall-normal direction; it only change in the
wall-parallel direction. Thus:&lt;/p&gt;
&lt;p&gt;$$\Rightarrow -u_k  \left [\hat n_i \cancel{\hat n_j \partial_j (\hat
n_k)} + \hat n_k \cancel{\hat n_j \partial_j (\hat n_i)} \right ]$$&lt;/p&gt;
&lt;p&gt;$$ \therefore \text{RHT} = 0 $$&lt;/p&gt;
&lt;p&gt;Moving back to the original expression, we&amp;rsquo;re then left with:&lt;/p&gt;
&lt;p&gt;$$ \partial_{\hat n} u_{i,\parallel} =  (\delta_{ik} - \hat n_k \hat n_i)
\hat n_j \partial_j (u_k) +
\cancel{u_k \hat n_j \partial_j (\delta_{ik} - \hat n_k \hat n_i)}$$&lt;/p&gt;
&lt;p&gt;Note that we already have the gradient of velocity in the last term, thus:&lt;/p&gt;
&lt;p&gt;$$ \partial_{\hat n} u_{i,\parallel} =  (\delta_{ik} - \hat n_k \hat n_i)
\hat n_j E_{kj} $$&lt;/p&gt;
&lt;p&gt;$$ \therefore \left (\frac{\partial u_\parallel}{\partial n}\right )
\Bigg\rvert_{n=0} = \bigg( \big[(\delta_{ik} - \hat n_k \hat n_i) \hat n_j
\big] E_{kj} \bigg) \Bigg\rvert_{n=0} = f(\hat n, E_{ij})$$&lt;/p&gt;
&lt;p&gt;To obtain $\tau_w$, simply multiply by $\mu$:&lt;/p&gt;
&lt;p&gt;$$\tau_w = \mu \bigg( \big[(\delta_{ik} - \hat n_k \hat n_i) \hat n_j
\big] E_{kj} \bigg) \Bigg\rvert_{n=0} $$&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Deriving Vorticity Transport in Index Notation</title>
      <link>https://www.jameswright.xyz/post/20200722/vorticity_transport_index_notation/</link>
      <pubDate>Wed, 22 Jul 2020 08:51:52 -0600</pubDate>
      <guid>https://www.jameswright.xyz/post/20200722/vorticity_transport_index_notation/</guid>
      <description>&lt;h2 id=&#34;definitions-and-useful-tools&#34;&gt;Definitions and Useful Tools&lt;/h2&gt;
&lt;h3 id=&#34;notation&#34;&gt;Notation&lt;/h3&gt;
&lt;p&gt;The vorticity transport equation can simply be calculated by taking the curl of
the conservation of momentum evolution equations. See my earlier post going
over &lt;a href=&#34;https://www.jameswright.xyz/post/20200721/cross_product_and_curl_in_index_notation/&#34;&gt;expressing curl in index summation notation&lt;/a&gt;. In summary, the
curl of a vector $a_j$ can be expressed as:&lt;/p&gt;
&lt;p&gt;$$ \nabla \times a_j  = b_k \ \Rightarrow \ \varepsilon_{ijk} \partial_i a_j =
b_k $$&lt;/p&gt;
&lt;p&gt;where $\varepsilon_{ijk}$ is the &lt;a href=&#34;https://www.jameswright.xyz/post/20200721/cross_product_and_curl_in_index_notation/#levi-civita-symbol&#34;&gt;Levi-Civita symbol&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note that I&amp;rsquo;ll be using shorthand to express the differential operator,
$\partial_\phi$, where the index $\phi$ is the index of a spacial variable
&lt;em&gt;except&lt;/em&gt; for $t$, which represents a time derivative:&lt;/p&gt;
&lt;p&gt;$$ \frac{\partial}{\partial x_i} = \partial_i \quad \mathrm{and} \quad
\frac{\partial}{\partial t} = \partial_t$$&lt;/p&gt;
&lt;p&gt;For double derivatives, a superscript will be used:&lt;/p&gt;
&lt;p&gt;$$ \frac{\partial}{\partial x_i} \frac{\partial}{\partial x_i} =
\frac{\partial^2}{\partial x_i^2} =
\partial_i^2 $$&lt;/p&gt;
&lt;h3 id=&#34;math-properties&#34;&gt;Math Properties&lt;/h3&gt;
&lt;p&gt;Some useful properties of the Levi-Civita symbol that will be used are that it
is commutative in multiplication and, since it is invariant of space and time,
it can be brought in or outside a differential operator operator like a
constant:&lt;/p&gt;
&lt;p&gt;$$ \varepsilon_{ijk}\frac{\partial}{\partial x_i} (\phi ) =
\frac{\partial}{\partial x_i} (\varepsilon_{ijk} \phi ) $$&lt;/p&gt;
&lt;p&gt;Using the &lt;a href=&#34;https://en.wikipedia.org/wiki/Levi-Civita_symbol#Product&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;product identity of permutation tensors
&lt;/a&gt;, you can also
convert permutation tensors into &lt;a href=&#34;https://en.wikipedia.org/wiki/Kronecker_delta&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kronecker
deltas&lt;/a&gt;, $\delta_{ij}$:&lt;/p&gt;
&lt;p&gt;$$ \varepsilon_{ijk} \varepsilon_{imn} = \delta_{jm}\delta_{kn} -
\delta_{jn}\delta_{km} $$&lt;/p&gt;
&lt;div class=&#34;flex px-4 py-3 mb-6 rounded-md bg-primary-100 dark:bg-primary-900&#34;&gt;
&lt;span class=&#34;pr-3 pt-1 text-primary-600 dark:text-primary-300&#34;&gt;
  &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
&lt;/span&gt;
  &lt;span class=&#34;dark:text-neutral-300&#34;&gt;Hint: To convert from some arbitrary pair of Levi-Civita symbols that share
one index, first rearrange their indices such that the shared index is the
first for both. Then, the ordering of the Kronecker delta indices is $
\delta_{a_2\  b_2} \delta_{a_3\  b_3} - \delta_{a_2\  b_3} \delta_{a_3\  b_2}$ ,
where $a_i$ and $b_i$ represent the indices of the different Levi-Civita
symbols and their subscripts represent which index is placed in that Kronecker
delta.&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;Speaking of Kronecker deltas, they have the handy effect of changing indices:&lt;/p&gt;
&lt;p&gt;$$ \delta_{ij} a_i = a_j $$&lt;/p&gt;
&lt;p&gt;Differential operators are order invariant:&lt;/p&gt;
&lt;p&gt;$$ \partial_i (\partial_j (u_k))  = \partial_j (\partial_i (u_k))$$&lt;/p&gt;
&lt;div class=&#34;flex px-4 py-3 mb-6 rounded-md bg-yellow-100 dark:bg-yellow-900&#34;&gt;
&lt;span class=&#34;pr-3 pt-1 text-red-400&#34;&gt;
  &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0zM12 15.75h.007v.008H12z&#34;/&gt;&lt;/svg&gt;
&lt;/span&gt;
  &lt;span class=&#34;dark:text-neutral-300&#34;&gt;I will be dropping the use of parentheses for the
differential operator, but note that it &lt;em&gt;is&lt;/em&gt; an operator and is not
commutative: $\partial_i u_j \neq u_j \partial_i$&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;With that taken care of, onto the derivation!&lt;/p&gt;
&lt;h2 id=&#34;curl-of-momentum-evolution&#34;&gt;Curl of Momentum Evolution&lt;/h2&gt;
&lt;p&gt;The index notation form of the incompressible momentum evolution (or
conservation of momentum equations) is:&lt;/p&gt;
&lt;p&gt;$$ \partial_t u_i + u_j \partial_j u_i = - \tfrac{1}{\rho} \partial_i p +
\nu \partial_j^2 u_i $$&lt;/p&gt;
&lt;p&gt;Vorticity, $\omega_k$, is given as the curl of velocity, or:&lt;/p&gt;
&lt;p&gt;$$ \nabla \times u_j  = \omega_k \ \Rightarrow \ \varepsilon_{ijk} \partial_i u_j =
\omega_k $$&lt;/p&gt;
&lt;p&gt;To get vorticity evolution, we can take the curl of the momentum transport equations:&lt;/p&gt;
&lt;p&gt;$$ \nabla \times [\partial_t u_i + u_j \partial_j u_i = -
\tfrac{1}{\rho} \partial_i p + \nu \partial_j^2 u_i ]$$&lt;/p&gt;
&lt;p&gt;In index notation, this is the equivalent of multiplying by the Levi-Civita
symbol and a corresponding differential operator:&lt;/p&gt;
&lt;p&gt;$$ \Rightarrow \varepsilon_{k\ell i} \partial_\ell [\partial_t u_i + u_j
\partial_j u_i = - \tfrac{1}{\rho} \partial_i p + \nu \partial_j^2 u_i ]$$&lt;/p&gt;
&lt;p&gt;Distributing this across the terms, we get:&lt;/p&gt;
&lt;p&gt;$$ \begin{align}
\underbrace{\varepsilon_{k\ell i} \partial_\ell
\partial_t u_i}&lt;em&gt;\text{Temporal Term} +
\underbrace{\varepsilon&lt;/em&gt;{k\ell i} \partial_\ell
u_j \partial_j u_i}&lt;em&gt;\text{Advection Term} &amp;amp; =
\underbrace{- \varepsilon&lt;/em&gt;{k\ell i} \partial_\ell
\tfrac{1}{\rho} \partial_i p}&lt;em&gt;\text{Pressure Term} +
\underbrace{\varepsilon&lt;/em&gt;{k\ell i} \partial_\ell
\nu \partial_j^2 u_i}_\text{Viscous Term} \\
\Rightarrow \quad \mathbb{T} + \mathbb{A} &amp;amp; = \mathbb{P} + \mathbb{V}
\end{align}$$&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ll treat the named terms individually, then put them back together. I&amp;rsquo;ll
leave the advection term for last since it&amp;rsquo;s more involved than the other
three.&lt;/p&gt;
&lt;h2 id=&#34;individual-terms&#34;&gt;Individual Terms&lt;/h2&gt;
&lt;h3 id=&#34;temporal-term-mathbbt&#34;&gt;Temporal Term $\mathbb{T}$&lt;/h3&gt;
&lt;p&gt;$$\mathbb{T} = \varepsilon_{k\ell i} \partial_\ell \partial_t u_i $$&lt;/p&gt;
&lt;p&gt;Using the order invariance of derivatives and moving $\varepsilon_{k\ell i}$
inside the derivative operators, we can get the following:&lt;/p&gt;
&lt;p&gt;$$ \Rightarrow \quad  \partial_t \varepsilon_{k\ell i} \partial_\ell u_i $$&lt;/p&gt;
&lt;p&gt;Since we know that $\omega_k = \varepsilon_{k\ell i} \partial_\ell u_i$, then
we can write:&lt;/p&gt;
&lt;p&gt;$$\mathbb{T} = \partial_t \omega_k $$&lt;/p&gt;
&lt;h3 id=&#34;pressure-term-mathbbp&#34;&gt;Pressure Term $\mathbb{P}$&lt;/h3&gt;
&lt;p&gt;$$ \mathbb{P} = - \varepsilon_{k\ell i} \partial_\ell \tfrac{1}{\rho}
\partial_i p $$&lt;/p&gt;
&lt;p&gt;First we can move the density term out of the derivatives:&lt;/p&gt;
&lt;p&gt;$$ \Rightarrow \quad - \tfrac{1}{\rho} \varepsilon_{k\ell i} \partial_\ell
\partial_i p $$&lt;/p&gt;
&lt;p&gt;The next step can go one of two ways. First you can simply use the fact that
the curl of a gradient of a scalar equals zero ($\nabla \times (\partial_i
\phi) = \mathbf{0}$). Or, you can be like me and want to prove that it is
zero. I&amp;rsquo;ll probably do the former here, and put the latter in a separate post.
Using the first method, we get that:&lt;/p&gt;
&lt;p&gt;$$ \mathbb{P} = \mathbf{0} $$&lt;/p&gt;
&lt;h3 id=&#34;viscous-term-mathbbv&#34;&gt;Viscous Term $\mathbb{V}$&lt;/h3&gt;
&lt;p&gt;$$ \mathbb{V} = \varepsilon_{k\ell i} \partial_\ell \nu \partial_j^2 u_i $$&lt;/p&gt;
&lt;p&gt;This step is almost identical to the Temporal Term; rearrange the terms such
that you have the curl of velocity in order to get vorticity:&lt;/p&gt;
&lt;p&gt;$$ \Rightarrow \quad \nu \partial_j^2 \varepsilon_{k\ell i} \partial_\ell u_i $$&lt;/p&gt;
&lt;p&gt;$$ \Rightarrow \quad \mathbb{V} = \nu \partial_j^2 \omega_k $$&lt;/p&gt;
&lt;h3 id=&#34;advection-term-mathbba&#34;&gt;Advection Term $\mathbb{A}$&lt;/h3&gt;
&lt;p&gt;$$ \mathbb{A} = \varepsilon_{k\ell i} \partial_\ell u_j \partial_j u_i $$&lt;/p&gt;
&lt;p&gt;This is quite a bit more tricky than the other three terms. Note that the
derivatives are operators, so this maybe more explicitly written as:&lt;/p&gt;
&lt;p&gt;$$ \mathbb{A} = \varepsilon_{k\ell i} \partial_\ell (u_j \partial_j (u_i) ) $$&lt;/p&gt;
&lt;p&gt;First, we&amp;rsquo;ll use a specialized property/rule:&lt;/p&gt;
&lt;p&gt;$$ u_j \partial_j u_i = \partial_i (\tfrac{1}{2} u_j u_j ) + (\nabla \times
u_n) \times u_q $$&lt;/p&gt;
&lt;p&gt;This is proved in the &lt;a href=&#34;#appendix-a&#34;&gt;Appendix A&lt;/a&gt;. Converting the right term into
index notation we get:&lt;/p&gt;
&lt;p&gt;$$ u_j \partial_j u_i = \partial_i (\tfrac{1}{2} u_j u_j ) +
\varepsilon_{ijq} u_q (\varepsilon_{jmn} \partial_m u_n)  $$&lt;/p&gt;
&lt;p&gt;Notice that the term in parentheses on the right is already the curl of
velocity, so we&amp;rsquo;ll go ahead and turn that into vorticity.&lt;/p&gt;
&lt;p&gt;$$ u_j \partial_j u_i = \partial_i (\tfrac{1}{2} u_j u_j ) +
\varepsilon_{ijq} \omega_j u_q $$&lt;/p&gt;
&lt;p&gt;Plugging this back into our expression for $\mathbb{A}$, we get:&lt;/p&gt;
&lt;p&gt;$$\mathbb{A} = \varepsilon_{k\ell i} \partial_\ell [\partial_i
(\tfrac{1}{2} u_j u_j ) + \varepsilon_{ijq} \omega_j u_q  ] $$&lt;/p&gt;
&lt;p&gt;Distributing this through, we get:&lt;/p&gt;
&lt;p&gt;$$\Rightarrow \ \varepsilon_{k\ell i} \partial_\ell [\partial_i (\tfrac{1}{2}
u_j u_j ) ] + \varepsilon_{k\ell i} \partial_\ell [ \varepsilon_{ijq}
\omega_j u_q ] $$&lt;/p&gt;
&lt;p&gt;For the lefthand term, note that $u_j u_j$ is just a scalar. Therefore, the
left expression can be surmised as the curl of the gradient of a scalar and it
is then equal to zero. This leaves us with:&lt;/p&gt;
&lt;p&gt;$$\Rightarrow \ \mathbb{A} = \varepsilon_{k\ell i} \partial_\ell [
\varepsilon_{ijq} \omega_j u_q ] $$&lt;/p&gt;
&lt;p&gt;Now let&amp;rsquo;s move $\varepsilon_{ijq}$ outside the differential and change the
indices of $\varepsilon_{k\ell i} \Rightarrow \varepsilon_{ik\ell}$: :&lt;/p&gt;
&lt;p&gt;$$\Rightarrow \ \mathbb{A} = \varepsilon_{ik\ell} \varepsilon_{ijq}
\partial_\ell \omega_j u_q$$&lt;/p&gt;
&lt;p&gt;Since we have two Levi-Civita symbols, we can utilize the permutation tensor&amp;rsquo;s
product identity shown in the &lt;a href=&#34;#math-properties&#34;&gt;Math Properties section&lt;/a&gt; to
turn this into an expression of Kronecker deltas.&lt;/p&gt;
&lt;p&gt;$$ \varepsilon_{ik\ell} \varepsilon_{ijq} = \delta_{kj}\delta_{\ell q} -
\delta_{kq}\delta_{\ell j} $$&lt;/p&gt;
&lt;p&gt;which gives us&lt;/p&gt;
&lt;p&gt;$$ \mathbb{A} = (\delta_{kj}\delta_{\ell q} - \delta_{kq}\delta_{\ell j} )
\partial_\ell \omega_j u_q $$&lt;/p&gt;
&lt;p&gt;Using the Kronecker deltas to change indices yields:&lt;/p&gt;
&lt;p&gt;$$ \mathbb{A} = \partial_q \omega_k u_q - \partial_j \omega_j u_k $$&lt;/p&gt;
&lt;p&gt;Next, use the product rule to expand the derivatives:&lt;/p&gt;
&lt;p&gt;$$ \Rightarrow \ (u_q \partial_q \omega_k + \omega_k \partial_q  u_q) -
( u_k \partial_j \omega_j  + \omega_j \partial_j  u_k)$$&lt;/p&gt;
&lt;p&gt;By incompressibility $\partial_q u_q =0$ (ie. the divergence of velocity is
zero). Also, $\partial_j \omega_j$ also equals zero, which is proven in
&lt;a href=&#34;#appendix-b&#34;&gt;Appendix B&lt;/a&gt;. Substituting in we are left with:&lt;/p&gt;
&lt;p&gt;$$ (u_q \partial_q \omega_k + 0) - ( 0  + \omega_j \partial_j  u_k) $$&lt;/p&gt;
&lt;p&gt;And thus we &lt;em&gt;finally&lt;/em&gt; get the final form of the advection term:&lt;/p&gt;
&lt;p&gt;$$ \Rightarrow \  \mathbb{A} = \underbrace{u_q \partial_q
\omega_k}_\text{Vorticity Advection}  - \underbrace{\omega_j \partial_j
u_k}_\text{Vorticity Stretching} $$&lt;/p&gt;
&lt;h2 id=&#34;putting-it-all-together&#34;&gt;Putting It All Together&lt;/h2&gt;
&lt;p&gt;When we combine the terms together, we finally get the full vorticity transport
equation:&lt;/p&gt;
&lt;p&gt;$$
\underbrace{\partial_t \omega_k}_\mathbb{T}  +
\underbrace{u_q \partial_q \omega_k  - \omega_j \partial_j u_k}_\mathbb{A} =
\underbrace{0}_\mathbb{P} +
\underbrace{\nu \partial_j^2 \omega_k}_\mathbb{V}
$$&lt;/p&gt;
&lt;h2 id=&#34;appendix&#34;&gt;Appendix&lt;/h2&gt;
&lt;h3 id=&#34;appendix-a&#34;&gt;Appendix A&lt;/h3&gt;
&lt;p&gt;Prove: $$ u_j \partial_j u_i = \partial_i (\tfrac{1}{2} u_j u_j ) + (\nabla
\times u_n) \times u_q $$&lt;/p&gt;
&lt;p&gt;Starting with the righthand side, put in index notation:&lt;/p&gt;
&lt;p&gt;$$\partial_i (\tfrac{1}{2} u_j u_j ) + \varepsilon_{ijq} u_q
(\varepsilon_{jmn} \partial_m u_n) $$&lt;/p&gt;
&lt;p&gt;Take the right term and rearrange it:
$$ &amp;hellip; + \varepsilon_{jqi} \varepsilon_{jmn} u_q  \partial_m u_n $$&lt;/p&gt;
&lt;p&gt;Convert the product of Levi-Civita symbols to Kronecker deltas:&lt;/p&gt;
&lt;p&gt;$$ &amp;hellip; + (\delta_{qm} \delta_{in} - \delta_{qn}\delta_{im} ) u_q  \partial_m
u_n $$&lt;/p&gt;
&lt;p&gt;$$ \Rightarrow \ &amp;hellip; + u_m  \partial_m u_i  - u_n  \partial_i u_n $$&lt;/p&gt;
&lt;p&gt;Change dummy indices in each term to match (for aesthetics):&lt;/p&gt;
&lt;p&gt;$$ u_j \partial_j u_i = \tfrac{1}{2} \partial_i (u_j u_j) + u_j  \partial_j
u_i  - u_j  \partial_i u_j $$&lt;/p&gt;
&lt;p&gt;Using product rule, we have $\partial_i (u_j u_j) = u_j \partial_i u_j + u_j
\partial_i u_j = 2 u_j \partial_i u_j $.  Substituting this in yields:&lt;/p&gt;
&lt;p&gt;$$ u_j \partial_i u_j + u_j  \partial_j u_i  - u_j  \partial_i u_j $$&lt;/p&gt;
&lt;p&gt;$$\Rightarrow u_j \partial_j u_i $$&lt;/p&gt;
&lt;h3 id=&#34;appendix-b&#34;&gt;Appendix B&lt;/h3&gt;
&lt;p&gt;Prove:
$$\partial_j \omega_j = 0$$&lt;/p&gt;
&lt;p&gt;Revert vorticity back to it&amp;rsquo;s original definition:&lt;/p&gt;
&lt;p&gt;$$\partial_j \varepsilon_{jik} \partial_i u_k \Rightarrow
\varepsilon_{jik} \partial_j \partial_i u_k $$&lt;/p&gt;
&lt;p&gt;Since the permutation tensor is antisymmetric in its indices,
$\varepsilon_{jik} = -\varepsilon_{ijk}$.&lt;/p&gt;
&lt;p&gt;$$\varepsilon_{jik} \partial_j \partial_i u_k = - \varepsilon_{ijk} \partial_j
\partial_i u_k $$&lt;/p&gt;
&lt;p&gt;Since all the indices are dummy indices, they maybe changed/switched
arbitrarily. Let&amp;rsquo;s switch the $j$ and $i$ indices:&lt;/p&gt;
&lt;p&gt;$$\Rightarrow \ \varepsilon_{jik} \partial_j \partial_i u_k = -
\varepsilon_{jik} \partial_i \partial_j u_k $$&lt;/p&gt;
&lt;p&gt;Additionally, the derivatives are order invariant, so we can rearrange them:&lt;/p&gt;
&lt;p&gt;$$\varepsilon_{jik} \partial_j \partial_i u_k = - \varepsilon_{jik} \partial_j
\partial_i u_k $$&lt;/p&gt;
&lt;p&gt;This is only possible if $\varepsilon_{jik} \partial_j \partial_i u_k = 0$. Thus:&lt;/p&gt;
&lt;p&gt;$$ \varepsilon_{jik} \partial_j \partial_i u_k  =  \partial_j \omega_j = 0$$&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
